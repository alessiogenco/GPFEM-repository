%% My p_ult expression for p_y lateral loading method based upon GPFEM 2D param analyses


close all
clear all
clc

% Import data

my_data = importdata('my_p_y_lateral_data_upd2.csv');


D_vector = my_data(:,1); % [m]
UCS_vector = my_data(:,2)/1000; % [MPa]
E_rock_vector = my_data(:,3); % [GPa]
p_ult_gpfem = (my_data(:,4)/1000)./D_vector; % [MPa/m]


%%

map = brewermap(9,'Greys');
colormap("winter")
fig_settings_print4

%%

% function [fitresult, gof] = createFit(E_rock_vector, UCS_vector, p_ult_gpfem)
%CREATEFIT(E_ROCK_VECTOR,UCS_VECTOR,P_ULT_GPFEM)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : E_rock_vector
%      Y Input : UCS_vector
%      Z Output: p_ult_gpfem
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 23-May-2025 13:21:32


%% Fit: 'untitled fit 4'.
[xData, yData, zData] = prepareSurfaceData( E_rock_vector, UCS_vector, p_ult_gpfem );

% Set up fittype and options.
ft = fittype( '(a*x^b)*(c*y+d)+e', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [0.0971317812358475 0.823457828327293 0.694828622975817 0.317099480060861 0.950222048838355];

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure('Name', 'untitled fit 1');
colormap("winter")
h = plot(fitresult, [xData, yData], zData);

% Modify surface transparency
h(1).EdgeColor = 'none';       % remove mesh
h(1).FaceAlpha = 0.8;          % set surface transparency (0=transparent, 1=opaque)

% Change data point markers to squares
h(2).Marker = 'diamond';             % square markers
h(2).MarkerFaceColor = 'k'; % fill color can be adjusted or set to 'none'
h(2).MarkerSize = 8;
h(2).MarkerEdgeColor = 'k';

% Labels and formatting
ylabel('$$E_{rock}$$ $$[GPa]$$', 'Interpreter', 'latex');
xlabel('$$UCS$$ $$[MPa]$$', 'Interpreter', 'latex');
zlabel('$$p_{ult}/D$$ $$[MN/m^2]$$', 'Interpreter', 'latex');
set(gca, 'FontSize', fsz)
set(gcf, 'color', 'w');
axis square
box on
grid on
view(193.1, 49.9);
set(gcf, 'Position', [100 100 400 400]);

% Save figure
cd 'Output A_G'\ 
print(['fitting_p_y-' '.png'], '-dpng', '-r1200');
